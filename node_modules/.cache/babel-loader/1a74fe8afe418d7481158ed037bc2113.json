{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\61470\\\\Desktop\\\\ReactApp\\\\payslip-generator\\\\src\\\\EmployeeInfo\\\\EmployeeInfoForm.js\";\nimport React from 'react';\nimport './EmployeeInfoForm.css';\nimport { FaPercent } from 'react-icons/fa';\nimport { TiDownloadOutline } from 'react-icons/ti';\nimport { FiDollarSign } from 'react-icons/fi';\nimport { Button } from 'react-bootstrap';\nimport { useMediaQuery } from 'react-responsive';\n\nclass EmployeeInfoForm extends React.Component {\n  constructor(props) {\n    super(props); //this.onSubmit = this.generatePayslip.bind(this);\n\n    this.handleChange = e => {\n      this.setState({\n        firstname: e.target.value,\n        lastname: e.target.value,\n        annualsalary: e.target.value,\n        superrate: e.target.value\n      });\n    };\n\n    this.generatePayslip = () => {\n      let incomeTax;\n      const firstName = this.state.this.state.firstname;\n      const lastName = this.state.lastname;\n      const annualSalary = this.state.annualsalary;\n      const employeeSuper = this.state.superrate;\n\n      if (annualSalary <= 18200) {\n        incomeTax = 0;\n      } else if (annualSalary > 18200 && annualSalary <= 37000) {\n        incomeTax = Math.round((annualSalary - 18200) * (19 / 100));\n      } else if (annualSalary > 37000 && annualSalary <= 80000) {\n        incomeTax = Math.round(3572 + (annualSalary - 37000) * (325 / 100));\n      } else if (annualSalary > 80000 && annualSalary <= 180000) {\n        incomeTax = Math.round(17547 + (annualSalary - 80000) * (37 / 100));\n      } else if (annualSalary > 180000) {\n        incomeTax = Math.round(54547 + (annualSalary - 180000) * (45 / 100));\n      }\n\n      const grossIncome = Math.round(annualSalary / 12);\n      const netIncome = grossIncome - incomeTax;\n      const superValue = Math.round(grossIncome * employeeSuper / 100);\n      const pay = netIncome - superValue;\n    };\n\n    this.state = {\n      firstname: '',\n      lastname: '',\n      annualsalary: '',\n      superrate: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"emplyoeewrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"employee-info-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Employee Info \"), React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"firstname\",\n      name: \"firstname\",\n      placeholder: \"Firstname\",\n      onChange: this.changeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"firstnameicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" \", React.createElement(TiDownloadOutline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), \" \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"lastname\",\n      name: \"lastname\",\n      placeholder: \"Lastname\",\n      onChange: this.changeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"salary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"dollaricon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" \", React.createElement(FiDollarSign, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), \" \"), React.createElement(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      className: \"annualsalary\",\n      name: \"annualsalary\",\n      placeholder: \"Annual Salary\",\n      onChange: this.changeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"decimalicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" .00 \"), React.createElement(\"span\", {\n      className: \"percentageicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \" \", React.createElement(FaPercent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), \" \"), React.createElement(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      className: \"superrate\",\n      name: \"superrate\",\n      placeholder: \"Super Rate\",\n      onChange: this.changeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"generatebutton\",\n      onClick: () => \"this.generatePayslip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Generate Payslip\")))));\n  }\n\n}\n\nexport default EmployeeInfoForm;","map":{"version":3,"sources":["C:/Users/61470/Desktop/ReactApp/payslip-generator/src/EmployeeInfo/EmployeeInfoForm.js"],"names":["React","FaPercent","TiDownloadOutline","FiDollarSign","Button","useMediaQuery","EmployeeInfoForm","Component","constructor","props","handleChange","e","setState","firstname","target","value","lastname","annualsalary","superrate","generatePayslip","incomeTax","firstName","state","this","lastName","annualSalary","employeeSuper","Math","round","grossIncome","netIncome","superValue","pay","render","changeEvent"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './EmployeeInfoForm.css';\r\nimport { FaPercent } from 'react-icons/fa';\r\nimport { TiDownloadOutline } from 'react-icons/ti';\r\nimport { FiDollarSign } from 'react-icons/fi';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\n\r\nclass EmployeeInfoForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    //this.onSubmit = this.generatePayslip.bind(this);\r\n    this.state = {\r\n    firstname: '',\r\n    lastname: '',\r\n    annualsalary: '',\r\n    superrate: ''\r\n  };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n  this.setState({\r\n    firstname: e.target.value,\r\n    lastname: e.target.value,\r\n    annualsalary: e.target.value,\r\n    superrate: e.target.value\r\n  })\r\n}\r\n\r\ngeneratePayslip= () =>{\r\n\r\n  let incomeTax;\r\n  const firstName = this.state.this.state.firstname;\r\n  const lastName = this.state.lastname;\r\n  const annualSalary = this.state.annualsalary;\r\n  const employeeSuper = this.state.superrate;\r\n\r\n\r\n    if (annualSalary <= 18200){\r\n    \tincomeTax = 0;\r\n    }else if(annualSalary > 18200 && annualSalary <= 37000){\r\n    \tincomeTax = Math.round(((annualSalary - 18200)* (19/100)));\r\n    }else if(annualSalary > 37000 && annualSalary <= 80000){\r\n    \tincomeTax = Math.round( 3572 + ((annualSalary - 37000)* (325/100)));\r\n    }else if(annualSalary > 80000 && annualSalary <= 180000){\r\n    \tincomeTax = Math.round( 17547 + ((annualSalary - 80000)* (37/100)));\r\n    }else if(annualSalary > 180000){\r\n    \tincomeTax = Math.round( 54547 + ((annualSalary - 180000)* (45/100)));\r\n    }\r\n    const grossIncome =  Math.round(annualSalary/12);\r\n    const netIncome = grossIncome - incomeTax;\r\n    const superValue = Math.round(grossIncome*employeeSuper/100);\r\n    const pay = netIncome - superValue;\r\n}\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"emplyoeewrapper\">\r\n        <div className=\"container\">\r\n      <form className=\"employee-info-form\">\r\n        <h2>Employee Info </h2>\r\n          <div className=\"name\">\r\n                  <input type = \"text\" className=\"firstname\" name = \"firstname\" placeholder = \"Firstname\" onChange={this.changeEvent}/>\r\n                  <span className=\"firstnameicon\"> <TiDownloadOutline /> </span>\r\n\r\n              <input type = \"text\" className=\"lastname\" name = \"lastname\" placeholder = \"Lastname\" onChange={this.changeEvent}/>\r\n          </div>\r\n          <div className=\"salary\">\r\n            <span className=\"dollaricon\"> <FiDollarSign /> </span>\r\n            <input type=\"number\" min=\"0\" className=\"annualsalary\" name=\"annualsalary\" placeholder = \"Annual Salary\" onChange={this.changeEvent}/>\r\n            <span className=\"decimalicon\"> .00 </span>\r\n            <span className=\"percentageicon\"> <FaPercent /> </span>\r\n            <input type=\"number\" min=\"0\" className=\"superrate\" name=\"superrate\" placeholder = \"Super Rate\" onChange={this.changeEvent}/>\r\n\r\n        </div>\r\n        <div className=\"generatebutton\" onClick={() =>\"this.generatePayslip\"}>\r\n          <Button variant='primary'>Generate Payslip</Button>\r\n          </div>\r\n      </form>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeeInfoForm;\r\n"]},"metadata":{},"sourceType":"module"}