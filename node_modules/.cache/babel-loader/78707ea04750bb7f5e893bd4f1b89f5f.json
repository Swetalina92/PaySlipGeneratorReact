{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\61470\\\\Desktop\\\\ReactApp\\\\payslip-generator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\61470\\\\Desktop\\\\ReactApp\\\\payslip-generator\\\\src\\\\EmployeeInfo\\\\EmployeeInfoForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { AiOutlinePercentage } from 'react-icons/ai';\nimport { TiDownloadOutline } from 'react-icons/ti';\nimport { FiDollarSign } from 'react-icons/fi';\nimport { Button } from 'react-bootstrap';\nimport { useMediaQuery } from 'react-responsive';\nimport './EmployeeInfoForm.css';\nimport PaySlipDetails from '../PaySlipDetails/PaySlipDetails.js';\n\nclass EmployeeInfoForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.generatePayslip = event => {\n      console.log(\"Button Clicked.\");\n      let incomeTax;\n      const firstName = event.target.firstName.value;\n      const lastName = event.target.lastName.value;\n      const annualSalary = event.target.annualSalary.value;\n      const employeeSuper = event.target.superRate.value;\n\n      if (annualSalary <= 18200) {\n        incomeTax = 0;\n      } else if (annualSalary > 18200 && annualSalary <= 37000) {\n        incomeTax = Math.round((annualSalary - 18200) * (19 / 100));\n      } else if (annualSalary > 37000 && annualSalary <= 80000) {\n        incomeTax = Math.round(3572 + (annualSalary - 37000) * (325 / 100));\n      } else if (annualSalary > 80000 && annualSalary <= 180000) {\n        incomeTax = Math.round(17547 + (annualSalary - 80000) * (37 / 100));\n      } else if (annualSalary > 180000) {\n        incomeTax = Math.round(54547 + (annualSalary - 180000) * (45 / 100));\n      }\n\n      const grossIncome = Math.round(annualSalary / 12);\n      const netIncome = grossIncome - incomeTax;\n      const superValue = Math.round(grossIncome * employeeSuper / 100);\n      const payValue = netIncome - superValue;\n      this.setState(prevState => ({\n        data: _objectSpread({}, prevState.data, {\n          payDate: new Date().getDate(),\n          payFrequency: 'Monthly',\n          grossIncome: grossIncome,\n          incomeTax: incomeTax,\n          netIncome: netIncome,\n          superValue: superValue,\n          payValue: payValue,\n          isButtonClicked: true\n        })\n      }));\n      console.log(\"this.state.data.isButtonClicked======\" + this.state.data.isButtonClicked);\n    };\n\n    this.generatePayslip = this.generatePayslip.bind(this);\n    this.state = {\n      data: {\n        firstName: '',\n        lastName: '',\n        annualSalary: '',\n        superRate: '',\n        payDate: '',\n        payFrequency: '',\n        grossIncome: '',\n        incomeTax: '',\n        netIncome: '',\n        superValue: '',\n        payValue: '',\n        isButtonClicked: false\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"mainwrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"employee-info-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Employee Info \"), React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"firstname\",\n      name: \"firstname\",\n      placeholder: \"Firstname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"firstnameicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \" \", React.createElement(TiDownloadOutline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), \" \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"lastname\",\n      name: \"lastname\",\n      placeholder: \"Lastname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"salary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"dollaricon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \" \", React.createElement(FiDollarSign, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), \" \"), React.createElement(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      className: \"annualsalary\",\n      name: \"annualsalary\",\n      placeholder: \"Annual Salary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"decimalicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \" .00 \"), React.createElement(\"span\", {\n      className: \"percentageicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \" \", React.createElement(AiOutlinePercentage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), \" \"), React.createElement(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      className: \"superrate\",\n      name: \"superrate\",\n      placeholder: \"Super Rate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"generatebutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.generatePayslip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Generate Payslip\")))), React.createElement(\"div\", {\n      className: \"payslip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, this.state.data.isButtonClicked && React.createElement(PaySlipDetails, {\n      val: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default EmployeeInfoForm;","map":{"version":3,"sources":["C:/Users/61470/Desktop/ReactApp/payslip-generator/src/EmployeeInfo/EmployeeInfoForm.js"],"names":["React","AiOutlinePercentage","TiDownloadOutline","FiDollarSign","Button","useMediaQuery","PaySlipDetails","EmployeeInfoForm","Component","constructor","props","generatePayslip","event","console","log","incomeTax","firstName","target","value","lastName","annualSalary","employeeSuper","superRate","Math","round","grossIncome","netIncome","superValue","payValue","setState","prevState","data","payDate","Date","getDate","payFrequency","isButtonClicked","state","bind","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { AiOutlinePercentage } from 'react-icons/ai';\r\nimport { TiDownloadOutline } from 'react-icons/ti';\r\nimport { FiDollarSign } from 'react-icons/fi';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nimport './EmployeeInfoForm.css';\r\nimport PaySlipDetails from '../PaySlipDetails/PaySlipDetails.js';\r\n\r\n\r\nclass EmployeeInfoForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.generatePayslip = this.generatePayslip.bind(this);\r\n    this.state = {\r\n    data: {\r\n      firstName: '',\r\n      lastName:'',\r\n      annualSalary: '',\r\n      superRate: '',\r\n      payDate: '',\r\n      payFrequency: '',\r\n      grossIncome: '',\r\n      incomeTax:'',\r\n      netIncome:'',\r\n      superValue:'',\r\n      payValue:'',\r\n      isButtonClicked: false\r\n      }\r\n    };\r\n  }\r\n\r\n\r\ngeneratePayslip= (event) =>{\r\n  console.log(\"Button Clicked.\");\r\n  let incomeTax;\r\n  const firstName = event.target.firstName.value;\r\n  const lastName = event.target.lastName.value;\r\n  const annualSalary = event.target.annualSalary.value;\r\n  const employeeSuper =  event.target.superRate.value;\r\n\r\n\r\n    if (annualSalary <= 18200){\r\n    \tincomeTax = 0;\r\n    }else if(annualSalary > 18200 && annualSalary <= 37000){\r\n    \tincomeTax = Math.round(((annualSalary - 18200)* (19/100)));\r\n    }else if(annualSalary > 37000 && annualSalary <= 80000){\r\n    \tincomeTax = Math.round( 3572 + ((annualSalary - 37000)* (325/100)));\r\n    }else if(annualSalary > 80000 && annualSalary <= 180000){\r\n    \tincomeTax = Math.round( 17547 + ((annualSalary - 80000)* (37/100)));\r\n    }else if(annualSalary > 180000){\r\n    \tincomeTax = Math.round( 54547 + ((annualSalary - 180000)* (45/100)));\r\n    }\r\n    const grossIncome =  Math.round(annualSalary/12);\r\n    const netIncome = grossIncome - incomeTax;\r\n    const superValue = Math.round(grossIncome*employeeSuper/100);\r\n    const payValue = netIncome - superValue;\r\n\r\n    this.setState(prevState => ({\r\n      data: {\r\n          ...prevState.data,\r\n      payDate: new Date().getDate(),\r\n      payFrequency: 'Monthly',\r\n      grossIncome: grossIncome,\r\n      incomeTax: incomeTax,\r\n      netIncome: netIncome,\r\n      superValue: superValue,\r\n      payValue:payValue,\r\n      isButtonClicked: true\r\n    }\r\n    }))\r\n    console.log(\"this.state.data.isButtonClicked======\"+ this.state.data.isButtonClicked);\r\n}\r\n  render() {\r\n    return (\r\n      <div className=\"mainwrapper\">\r\n        <div className=\"container\">\r\n          <form className=\"employee-info-form\">\r\n            <h2>Employee Info </h2>\r\n              <div className=\"name\">\r\n                  <input type = \"text\" className=\"firstname\" name = \"firstname\" placeholder = \"Firstname\" />\r\n                  <span className=\"firstnameicon\"> <TiDownloadOutline /> </span>\r\n\r\n              <input type = \"text\" className=\"lastname\" name = \"lastname\" placeholder = \"Lastname\" />\r\n          </div>\r\n          <div className=\"salary\">\r\n            <span className=\"dollaricon\"> <FiDollarSign /> </span>\r\n            <input type=\"number\" min=\"0\" className=\"annualsalary\" name=\"annualsalary\" placeholder = \"Annual Salary\"  />\r\n            <span className=\"decimalicon\"> .00 </span>\r\n            <span className=\"percentageicon\"> <AiOutlinePercentage /> </span>\r\n            <input type=\"number\" min=\"0\" className=\"superrate\" name=\"superrate\" placeholder = \"Super Rate\" />\r\n\r\n        </div>\r\n        <div className=\"generatebutton\">\r\n          <Button variant='primary'  onClick={this.generatePayslip}>Generate Payslip</Button>\r\n          </div>\r\n      </form>\r\n      </div>\r\n      <div  className=\"payslip\">\r\n        {this.state.data.isButtonClicked && <PaySlipDetails val={this.state.data} />}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeeInfoForm;\r\n"]},"metadata":{},"sourceType":"module"}