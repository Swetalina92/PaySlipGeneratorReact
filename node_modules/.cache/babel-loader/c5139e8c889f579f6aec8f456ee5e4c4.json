{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\61470\\\\Desktop\\\\ReactApp\\\\payslip-generator\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\61470\\\\Desktop\\\\ReactApp\\\\payslip-generator\\\\src\\\\EmployeeInfo\\\\EmployeeInfoForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { AiOutlinePercentage } from 'react-icons/ai';\nimport { TiDownloadOutline } from 'react-icons/ti';\nimport { FiDollarSign } from 'react-icons/fi';\nimport { Button } from 'react-bootstrap';\nimport { useMediaQuery } from 'react-responsive';\nimport './EmployeeInfoForm.css';\nimport PaySlipDetails from '../PaySlipDetails/PaySlipDetails.js';\n\nclass EmployeeInfoForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState(prevState => ({\n        data: _objectSpread({}, prevState.data, {\n          firstname: e.target.value,\n          lastname: e.target.value,\n          annualsalary: e.target.value,\n          superrate: e.target.value\n        })\n      }));\n    };\n\n    this.generatePayslip = () => {\n      let incomeTax;\n      const fullName = this.state.data.firstname + \" \" + this.state.data.lastname;\n      const annualSalary = this.state.data.annualsalary;\n      const employeeSuper = this.state.data.superrate;\n\n      if (annualSalary <= 18200) {\n        incomeTax = 0;\n      } else if (annualSalary > 18200 && annualSalary <= 37000) {\n        incomeTax = Math.round((annualSalary - 18200) * (19 / 100));\n      } else if (annualSalary > 37000 && annualSalary <= 80000) {\n        incomeTax = Math.round(3572 + (annualSalary - 37000) * (325 / 100));\n      } else if (annualSalary > 80000 && annualSalary <= 180000) {\n        incomeTax = Math.round(17547 + (annualSalary - 80000) * (37 / 100));\n      } else if (annualSalary > 180000) {\n        incomeTax = Math.round(54547 + (annualSalary - 180000) * (45 / 100));\n      }\n\n      const grossIncome = Math.round(annualSalary / 12);\n      const netIncome = grossIncome - incomeTax;\n      const superValue = Math.round(grossIncome * employeeSuper / 100);\n      const payValue = netIncome - superValue;\n      this.setState({\n        payDate: new Date().getDate(),\n        payFrequency: 'Monthly',\n        grossIncome: grossIncome,\n        incomeTax: incomeTax,\n        netIncome: netIncome,\n        superValue: superValue,\n        payValue: payValue\n      });\n    };\n\n    this.state = {\n      data: {\n        firstname: '',\n        lastname: '',\n        annualsalary: '',\n        superrate: '',\n        payDate: '',\n        payFrequency: '',\n        grossIncome: '',\n        incomeTax: '',\n        netIncome: '',\n        superValue: '',\n        payValue: ''\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"emplyoeewrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(PaySlipDetails, {\n      val: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"employee-info-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Employee Info \"), React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"firstname\",\n      name: \"firstname\",\n      placeholder: \"Firstname\",\n      onChange: this.changeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"firstnameicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \" \", React.createElement(TiDownloadOutline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), \" \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"lastname\",\n      name: \"lastname\",\n      placeholder: \"Lastname\",\n      onChange: this.changeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"salary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"dollaricon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \" \", React.createElement(FiDollarSign, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), \" \"), React.createElement(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      className: \"annualsalary\",\n      name: \"annualsalary\",\n      placeholder: \"Annual Salary\",\n      onChange: this.changeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"decimalicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \" .00 \"), React.createElement(\"span\", {\n      className: \"percentageicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \" \", React.createElement(AiOutlinePercentage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), \" \"), React.createElement(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      className: \"superrate\",\n      name: \"superrate\",\n      placeholder: \"Super Rate\",\n      onChange: this.changeEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"generatebutton\",\n      onClick: () => \"this.generatePayslip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Generate Payslip\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default EmployeeInfoForm;","map":{"version":3,"sources":["C:/Users/61470/Desktop/ReactApp/payslip-generator/src/EmployeeInfo/EmployeeInfoForm.js"],"names":["React","AiOutlinePercentage","TiDownloadOutline","FiDollarSign","Button","useMediaQuery","PaySlipDetails","EmployeeInfoForm","Component","constructor","props","handleChange","e","setState","prevState","data","firstname","target","value","lastname","annualsalary","superrate","generatePayslip","incomeTax","fullName","state","annualSalary","employeeSuper","Math","round","grossIncome","netIncome","superValue","payValue","payDate","Date","getDate","payFrequency","render","changeEvent"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { AiOutlinePercentage } from 'react-icons/ai';\r\nimport { TiDownloadOutline } from 'react-icons/ti';\r\nimport { FiDollarSign } from 'react-icons/fi';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nimport './EmployeeInfoForm.css';\r\nimport PaySlipDetails from '../PaySlipDetails/PaySlipDetails.js';\r\n\r\n\r\nclass EmployeeInfoForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    data: {\r\n      firstname: '',\r\n      lastname:'',\r\n      annualsalary: '',\r\n      superrate: '',\r\n      payDate: '',\r\n      payFrequency: '',\r\n      grossIncome: '',\r\n      incomeTax:'',\r\n      netIncome:'',\r\n      superValue:'',\r\n      payValue:''\r\n      }\r\n    };\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState(prevState => ({\r\n      data: {\r\n          ...prevState.data,\r\n          firstname: e.target.value,\r\n          lastname: e.target.value,\r\n          annualsalary: e.target.value,\r\n          superrate: e.target.value\r\n        }\r\n        }))\r\n}\r\n\r\ngeneratePayslip= () =>{\r\n\r\n  let incomeTax;\r\n  const fullName = this.state.data.firstname + \" \" + this.state.data.lastname;\r\n  const annualSalary = this.state.data.annualsalary;\r\n  const employeeSuper = this.state.data.superrate;\r\n\r\n\r\n    if (annualSalary <= 18200){\r\n    \tincomeTax = 0;\r\n    }else if(annualSalary > 18200 && annualSalary <= 37000){\r\n    \tincomeTax = Math.round(((annualSalary - 18200)* (19/100)));\r\n    }else if(annualSalary > 37000 && annualSalary <= 80000){\r\n    \tincomeTax = Math.round( 3572 + ((annualSalary - 37000)* (325/100)));\r\n    }else if(annualSalary > 80000 && annualSalary <= 180000){\r\n    \tincomeTax = Math.round( 17547 + ((annualSalary - 80000)* (37/100)));\r\n    }else if(annualSalary > 180000){\r\n    \tincomeTax = Math.round( 54547 + ((annualSalary - 180000)* (45/100)));\r\n    }\r\n    const grossIncome =  Math.round(annualSalary/12);\r\n    const netIncome = grossIncome - incomeTax;\r\n    const superValue = Math.round(grossIncome*employeeSuper/100);\r\n    const payValue = netIncome - superValue;\r\n\r\n    this.setState({\r\n      payDate: new Date().getDate(),\r\n      payFrequency: 'Monthly',\r\n      grossIncome: grossIncome,\r\n      incomeTax: incomeTax,\r\n      netIncome: netIncome,\r\n      superValue: superValue,\r\n      payValue:payValue\r\n      })\r\n}\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"emplyoeewrapper\">\r\n      <PaySlipDetails val={this.state} />\r\n        <div className=\"container\">\r\n      <form className=\"employee-info-form\">\r\n        <h2>Employee Info </h2>\r\n          <div className=\"name\">\r\n                  <input type = \"text\" className=\"firstname\" name = \"firstname\" placeholder = \"Firstname\" onChange={this.changeEvent}/>\r\n                  <span className=\"firstnameicon\"> <TiDownloadOutline /> </span>\r\n\r\n              <input type = \"text\" className=\"lastname\" name = \"lastname\" placeholder = \"Lastname\" onChange={this.changeEvent}/>\r\n          </div>\r\n          <div className=\"salary\">\r\n            <span className=\"dollaricon\"> <FiDollarSign /> </span>\r\n            <input type=\"number\" min=\"0\" className=\"annualsalary\" name=\"annualsalary\" placeholder = \"Annual Salary\" onChange={this.changeEvent}/>\r\n            <span className=\"decimalicon\"> .00 </span>\r\n            <span className=\"percentageicon\"> <AiOutlinePercentage /> </span>\r\n            <input type=\"number\" min=\"0\" className=\"superrate\" name=\"superrate\" placeholder = \"Super Rate\" onChange={this.changeEvent}/>\r\n\r\n        </div>\r\n        <div className=\"generatebutton\" onClick={() =>\"this.generatePayslip\"}>\r\n          <Button variant='primary'>Generate Payslip</Button>\r\n          </div>\r\n          <div>\r\n      </div>\r\n      </form>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeeInfoForm;\r\n"]},"metadata":{},"sourceType":"module"}